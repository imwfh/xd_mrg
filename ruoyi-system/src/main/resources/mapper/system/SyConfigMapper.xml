<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SyConfigMapper">
    
    <resultMap type="SyConfig" id="SyConfigResult">
        <result property="id"    column="id"    />
        <result property="configName"    column="config_name"    />
        <result property="configKey"    column="config_key"    />
        <result property="configValue"    column="config_value"    />
        <result property="startTime"    column="start_time"    />
        <result property="endTime"    column="end_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>
	
	<sql id="selectSyConfigVo">
        select id, config_name, config_key, config_value, start_time, end_time, remark from sy_config
    </sql>
	
    <select id="selectSyConfigList" parameterType="SyConfig" resultMap="SyConfigResult">
        <include refid="selectSyConfigVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
             <if test="configName != null  and configName != '' "> and config_name = #{configName}</if>
             <if test="configKey != null  and configKey != '' "> and config_key = #{configKey}</if>
             <if test="configValue != null  and configValue != '' "> and config_value = #{configValue}</if>
             <if test="startTime != null "> and start_time = #{startTime}</if>
             <if test="endTime != null "> and end_time = #{endTime}</if>
             <if test="remark != null  and remark != '' "> and remark = #{remark}</if>
         </where>
    </select>
    
    <select id="selectSyConfigById" parameterType="Integer" resultMap="SyConfigResult">
        <include refid="selectSyConfigVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSyConfig" parameterType="SyConfig" useGeneratedKeys="true" keyProperty="id">
        insert into sy_config
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="configName != null  and configName != ''  ">config_name,</if>
			<if test="configKey != null  and configKey != ''  ">config_key,</if>
			<if test="configValue != null  and configValue != ''  ">config_value,</if>
			<if test="startTime != null  ">start_time,</if>
			<if test="endTime != null  ">end_time,</if>
			<if test="remark != null  and remark != ''  ">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="configName != null  and configName != ''  ">#{configName},</if>
			<if test="configKey != null  and configKey != ''  ">#{configKey},</if>
			<if test="configValue != null  and configValue != ''  ">#{configValue},</if>
			<if test="startTime != null  ">#{startTime},</if>
			<if test="endTime != null  ">#{endTime},</if>
			<if test="remark != null  and remark != ''  ">#{remark},</if>
         </trim>
    </insert>
	 
    <update id="updateSyConfig" parameterType="SyConfig">
        update sy_config
        <trim prefix="SET" suffixOverrides=",">
            <if test="configName != null  and configName != ''  ">config_name = #{configName},</if>
            <if test="configKey != null  and configKey != ''  ">config_key = #{configKey},</if>
            <if test="configValue != null  and configValue != ''  ">config_value = #{configValue},</if>
            <if test="startTime != null  ">start_time = #{startTime},</if>
            <if test="endTime != null  ">end_time = #{endTime},</if>
            <if test="remark != null  and remark != ''  ">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

	<delete id="deleteSyConfigById" parameterType="Integer">
        delete from sy_config where id = #{id}
    </delete>
	
    <delete id="deleteSyConfigByIds" parameterType="String">
        delete from sy_config where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>